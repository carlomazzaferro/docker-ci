FROM docker:19.03

ARG TERRAFORM_VERSION
ARG DOCKER_COMPOSE_VERSION

ENV DOCKER_COMPOSE_VERSION=$DOCKER_COMPOSE_VERSION
ENV TERRAFORM_VERSION=$TERRAFORM_VERSION

# Install Docker, Docker Compose, Docker Squash
RUN apk --update --no-cache add \
        bash \
        curl \
        device-mapper \
        unzip \
        iptables \
        ca-certificates \
        gcc \
        musl-dev \
        libffi-dev \
        libressl-dev \
        make \
        jq \
        && \
    apk upgrade

ENV PYTHONUNBUFFERED=1

RUN echo "**** install Python ****" && \
    apk add --no-cache python3 && \
    if [ ! -e /usr/bin/python ]; then ln -sf python3 /usr/bin/python ; fi && \
    \
    echo "**** install pip ****" && \
    python3 -m ensurepip && \
    rm -r /usr/lib/python*/ensurepip && \
    pip3 install --no-cache --upgrade pip setuptools wheel && \
    if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi

RUN apk add python3-dev util-linux
RUN apk add --no-cache --update coreutils libc6-compat wget
RUN wget $(curl -s https://api.github.com/repos/mikefarah/yq/releases/latest | grep browser_download_url | grep linux_amd64 | cut -d '"' -f 4) -O /usr/bin/yq && chmod +x /usr/bin/yq

RUN pip3 install docker-compose==${DOCKER_COMPOSE_VERSION} && \
    rm -rf /var/cache/apk/* && \
    rm -rf /root/.cache

RUN pip3 install awscli

COPY entrypoint.sh /bin/entrypoint.sh
COPY ./tf_install_alpine.sh /root/tf_install_alpine.sh

RUN /root/tf_install_alpine.sh -i ${TERRAFORM_VERSION}

ENTRYPOINT ["entrypoint.sh"]

