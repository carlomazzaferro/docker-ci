name: Create and publish Docker images

on:
  push:
    branches:
      - "*"
  create:
    tag:
      - "v*"

jobs:
  build-and-push-router-image:
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: carlomazzaferro/redis-cli
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=semver,pattern={{raw}}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: redis
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: redis/Dockerfile

    outputs:
      json: ${{ steps.meta.outputs.json }}

  tests:
    runs-on: ubuntu-latest
    needs: [build-and-push-router-image]
    env:
      ROUTER_IMAGE: ${{ fromJSON(needs.build-and-push-router-image.outputs.json).tags[0] }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: run smoke tests
        run: |
          echo "${ROUTER_IMAGE}"

    outputs:
      router-tags: ${{ needs.build-and-push-router-image.outputs.json }}

  smoke:
    runs-on: ubuntu-latest
    needs: [ tests ]
    env:
      ROUTER_IMAGE: ${{ fromJSON(needs.tests.outputs.router-tags).tags[0] }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: run smoke tests
        run: |
          echo "${ROUTER_IMAGE}"

    outputs:
      router-tags: ${{ needs.tests.outputs.json }}

